void help(int i, int k, int sumUptoNow, int n, vector<int>&subset, vector<vector<int>>&ans){
    //Base conditions

    if(sumUptoNow>n)
    return;

    if(k==0){
        if(sumUptoNow==n){
            ans.push_back(subset);
        }
        return;
            
    }

    if(i==10)
    return;

//Picking the element
    sumUptoNow+=i;
    subset.push_back(i);
    help(i+1, k-1, sumUptoNow, n, subset, ans);
    sumUptoNow-=i;
    subset.pop_back();

//Ignoring the element
    help(i+1, k, sumUptoNow, n, subset, ans);

}
class Solution{
    public:
vector<vector<int>>combinationSum3(int k, int n){
    vector<int>subset;
    vector<vector<int>>ans;
    help(1, k, 0, n, subset, ans);
    return ans;
}
};
 
